---
// SERVER SIDE SCRIPTS

import DefaultLayout from '../../layouts/DefaultLayout.astro'
import Card from '../../components/Card.astro'
import Paginate from '../../components/Pagination.astro'
import * as MySQLData from '../../lib/mysql-data.mjs'

export async function getStaticPaths({ paginate }) {
  // The pagination view for a collection with dynamic content (could also be fetched from an API)
  // const response = await fetch('https://jsonplaceholder.typicode.com/posts')
  // const data = await response.json()

  // get data, paginate
  let data = await MySQLData.getData()
  return paginate(data, { pageSize: 30 })
}
// export for page
const { page } = Astro.props

// generate / use slug
function getSlug(post) {
  return post.title.replaceAll(' ', '-').toLowerCase()
  // or, use existing slug (below)
}
---

<DefaultLayout title="Collection" description="All the posts">
  <section class="container">
    <h1>Park Database</h1>
  </section>

  <section class="container">
    <div class="row">
      <div class="col-12">
        <div class="items card-group">
          {
            page.data.map((post) => (
              <div class="item">
                <Card url={'/collection/' + post.slug} img={post.img} title={post.title} text={post.text}>
                  {post.body}
                </Card>
              </div>
            ))
          }
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-12 text-center">
        <Paginate page={page} />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  $grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px,
  );

  .items {
    // xs
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 1rem;

    // sm
    @media (min-width: 576px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 1rem;
    }
    // md
    @media (min-width: 768px) {
      grid-template-columns: repeat(3, 1fr);
      grid-gap: 1rem;
    }
    // lg
    @media (min-width: 992px) {
      grid-template-columns: repeat(4, 1fr);
    }
    // xl
    @media (min-width: 1200px) {
      grid-template-columns: repeat(5, 1fr);
    }
    // xxl
    @media (min-width: 1400px) {
      grid-template-columns: repeat(6, 1fr);
    }
  }
</style>
