---
// @ts-nocheck
// SERVER SIDE SCRIPTS

import DefaultLayout from '../../layouts/DefaultLayout.astro'
import * as MySQLData from '../../lib/mysql-data.mjs'
import { nl2br, formatDate } from '../../lib/functions.mjs'
import Image from '../../components/Image.astro'
import Map from '../../components/Map.astro'
import Taxonomy from '../../components/Taxonomy.astro'
import CitationList from '../../components/CitationList.astro'

export async function getStaticPaths() {
  // get external data
  // const data = await fetch('https://jsonplaceholder.typicode.com/posts').then((response) => response.json())
  let data = await MySQLData.getData()

  // make posts relationships accessible
  const postsById = {}
  data.map((post) => {
    if (post.id) {
      postsById[post.id] = {
        slug: post.slug,
        title: post.title,
        img: post.img,
      }
    }
  })
  //   console.log(postsById)

  return data.map((post) => {
    post.date_start_F = formatDate(post.date_start)
    // only if different
    post.date_end_F = post.date_start != post.date_end ? formatDate(post.date_end) : ''
    post.created_date_F = formatDate(post.created_date)
    post.updated_date_F = formatDate(post.updated_date)

    // format text
    post.text = nl2br(post.text)
    post.address = nl2br(post.address)

    // add relationships
    if (post.relationships) {
      let rel = post.relationships.split(',')
      //   console.log(rel)
      post.rel = []
      rel.map((id) => {
        // if not null and not the same post
        if (postsById[id] && post.id != id) {
          post.rel.push(postsById[id])
        }
      })
    }

    return {
      params: {
        // generate slug - example: https://github.com/withastro/astro/issues/7121
        // post: post.title.replaceAll(' ', '-').toLowerCase(),
        post: post.slug, // use a slug
      },
      props: { post },
    }
  })
}
// export for page
const { post } = Astro.props
---

<DefaultLayout title={post.title} description={post.body} url={post.title}>
  <div class="container">
    <nav aria-label="breadcrumb" style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/collection">Collection</a></li>
        <li class="breadcrumb-item active" aria-current="page">{post.title}</li>
      </ol>
    </nav>
  </div>

  <section class="container my-3">
    <h1>{post.title}</h1>
  </section>

  <section class="container">
    <div class="row">
      <div class="col-12 col-md-6 my-2">
        <p set:html={post.text} />
        <table class="table post-table table-sm table-responsive">
          <tbody>
            <!-- <tr>
              <td class="title">Id</td>
              <td class="value">
                {post.id}
              </td>
            </tr> -->

            {
              post.date_start_F && (
                <tr>
                  <td>Date/s</td>
                  <td>
                    {post.date_start_F}
                    {post.date_end_F && 'â€“' + post.date_end_F}
                  </td>
                </tr>
              )
            }

            <tr>
              <td class="title">Taxonomy</td>
              <td class="value">
                <Taxonomy cat1={post.cat1} cat2={post.cat2} cat3={post.cat3} cat4={post.cat4} />
              </td>
            </tr>

            {
              post.what && (
                <tr>
                  <td>
                    <a
                      href="http://en.wikipedia.org/wiki/National_Register_of_Historic_Places"
                      target="_blank"
                      title="(adjusted) U.S. National Register of Historic Places classification"
                    >
                      NRHP classification
                    </a>
                  </td>
                  <td>
                    <a href={'/search/?q=' + post.what} title={'search for ' + post.what}>
                      {post.what}
                    </a>
                  </td>
                </tr>
              )
            }

            {
              post.address && (
                <tr>
                  <td>Address</td>
                  <td set:html={post.address} />
                </tr>
              )
            }

            {
              post.lat && (
                <tr>
                  <td>Location</td>
                  <td>
                    {post.lat}, {post.lng}
                  </td>
                </tr>
              )
            }

            {
              post.budget && (
                <tr>
                  <td>Budget</td>
                  <td>{post.budget}</td>
                </tr>
              )
            }

            {
              post.profit && (
                <tr>
                  <td>Profit</td>
                  <td>{post.profit}</td>
                </tr>
              )
            }

            {
              post.contracts && (
                <tr>
                  <td>Contracts</td>
                  <td>{post.contracts}</td>
                </tr>
              )
            }

            {
              post.citation && (
                <tr>
                  <td>Sources</td>
                  <td>
                    <CitationList citation={post.citation} />
                  </td>
                </tr>
              )
            }

            {
              post.rel && (
                <tr>
                  <td>See also</td>
                  <td>
                    {post.rel.map((item) => (
                      <span class="thumb">
                        <a href={'/collection/' + item.slug} alt={item.title} style="">
                          <Image img={item.img} title={item.title} classList="img-fluid" />
                        </a>
                      </span>
                    ))}
                  </td>
                </tr>
              )
            }

            {
              post.created_date_F && (
                <tr>
                  <td>Record created</td>
                  <td>{post.created_date_F}</td>
                </tr>
              )
            }

            {
              post.updated_date_F && (
                <tr>
                  <td>Record updated</td>
                  <td>{post.updated_date_F}</td>
                </tr>
              )
            }
          </tbody>
        </table>
      </div>
      <div class="col-12 col-md-6 my-2">
        <Image img={post.img_lg} title={post.title} classList="img-fluid" />
        <Map items={JSON.stringify([post])} />
      </div>
    </div>
  </section>

  <style lang="scss">
    table {
      &.post-table * {
        border-color: #ccc;
        background-color: transparent !important;
      }
      tr td {
        .title {
          width: 25%;
        }
        .thumb {
          width: 90px;
          height: 90px;
          max-height: 90px;
          display: inline-block;
          margin: 0.5rem 0.5rem 0.5rem 0;
        }
      }
    }
  </style>
</DefaultLayout>
